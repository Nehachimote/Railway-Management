import java.util.Scanner;

public class Main
{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n; //choice for switch case
        Reservation r = new Reservation();
        r.disp();
        r.init1();
        char ch;
        System.out.println("*********************************************   RAILWAY RESERVATION SYSTEM   ********************************************");
        do {
            System.out.println("1.Book ticket\n2.Display list of passengers\n3.Cancel booking\n4.Waiting list of passengers\n5.Available seat matrix\n6.Check PNR status");
            System.out.println("Enter your choice : ");
            n = sc.nextInt();
            switch (n) {
                case 1:
                    r.book_ticket();
                    break;
                case 2:
                    r.display_passenger_details();
                    break;
                case 3:
                    r.cancel_booking();
                    break;
                case 4:
                    r.waiting_list();
                    break;
                case 5:
                    r.available_seats();
                    break;
                case 6:
                    r.pnr_status();
                    break;
                default:
                    System.out.println("invalid operator");
                    break;
            }
            System.out.println("\nDo you want to continue, if yes enter y?");
            ch = sc.next().charAt(0);
            System.out.println("------------------------------------------------------------------------");
        } while (ch == 'y');
    }
}
class Reservation {
    Scanner sc = new Scanner(System.in);

    Node head, front, rear;

    // global variables
    String train, station, cla, source, destination, date;
    int time1, a, train_number;
    int w_list=0; //waiting list count
    int k = 15; //total count of passengers
    int d; //total fare amount
    int b; //count of passengers for array index
    int t = 2300; //registration number
    int x = 15; //initialise starting vertex as 15
    int total_p = 15;
    int m=0;//waiting list index

    int s[][] = new int[4][5]; // seat arrangement array
    int seat_no[] = new int[30]; // array to store seat numbers of the passengers
    String names[] = new String[30]; // array to store the names of the passengers
    int regno[] = new int[30]; // array to store registration numbers of the passengers
    int wait[]=new int[20]; //to store waiting list number of passengers

    class Node {

        String train, station, cla, source, destination, date;
        int a, time1, train_number;
        String name;
        int age;
        int reg_no;
        char gender;
        Node next;
        Node(String name, int age, char gender) {
            this.name = name;
            this.age = age;
            this.gender = gender;
            this.next = null;
            t++;
            reg_no = t;
        }
    }

    void disp() { // method to initialize 2D array indices with respective seat numbers
        int x = 10;
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 5; j++) {
                s[i][j] = x++;
            }
        }
    }

    void init1() {//hard coded 15 passengers details
        for (int i = 1; i < 4; i++) {
            for (int j = 0; j < 5; j++) {
                s[i][j] = 0;
            }
        }
        int x = 15;
        for (int i = 0; i < 15; i++) {
            seat_no[i] = x++;
        }

        names[0] = "Alana";
        names[1] = "Almer";
        names[2] = "Harry";
        names[3] = "Kiara";
        names[4] = "Laura";
        names[5] = "Kenny";
        names[6] = "Keith";
        names[7] = "Haden";
        names[8] = "Jazii";
        names[9] = "Lilly";
        names[10] = "Flora";
        names[11] = "Louis";
        names[12] = "Nancy";
        names[13] = "Patty";
        names[14] = "Hazel";

        for (int i = 0; i < 15; i++) {
            Node p = new Node(names[i], 15, 'f');
            regno[b] = p.reg_no;
            b++;
            //insertion at end of linked list
            if (head == null) {
                head = p;
            } else {
                Node temp = head;
                while (temp.next != null) {
                    temp = temp.next;
                }
                temp.next = p;
            }
        }
    }

    void enqueue(String name, int age, char gender) { // enqueue a passenger node in the waiting list
        Node w = new Node(name, age, gender);
        w.train = train;
        w.station = station;
        w.cla = cla;
        w.source = source;
        w.destination = destination;
        w.date = date;
        w.time1 = time1;
        w.a = a;
        w.train_number = train_number;

        //insertion of waiting passenger in queue
        if (front == null) {
            rear = w;
            front = w;
        } else {
            rear.next = w;
            rear = w;
        }
        //incrementing waiting list passenger count
        w_list++;
    }

    void dequeue(int seatno) { // dequeues a passenger node from waiting list and adds into the passenger list
        Node temp = head;
        while (temp.next != null) {
            temp = temp.next;
        }
        System.out.println(front.name + " Congratulations your booking is confirmed.");
        System.out.println("\n------------------TICKET-----------------------");
        System.out.println("Name            : " + front.name);
        System.out.println("Registration no : " + front.reg_no);
        System.out.println("Total Amount    : Rs." + d);
        System.out.println("Source          : " + front.source);
        System.out.println("Destination     : " + front.destination);
        System.out.println("Date            : " + front.date);
        System.out.print("Train name      : ");
        if (front.train_number == 1) {
            System.out.println("Rajdhani express");
            System.out.print("Time            : " + front.time1 + " PM");
        } else if (front.train_number == 2) {
            System.out.println("Satabdi express");
            System.out.print("Time            : " + front.time1 + " PM");
        } else if (front.train_number == 3) {
            System.out.println("Humsafar express");
            System.out.print("Time            : " + front.time1 + " PM");
        } else if (front.train_number == 4) {
            System.out.println("Garib-Rath express");
            System.out.print("Time            : " + front.time1 + " PM");
        } else if (front.train_number == 5) {
            System.out.println("Duronto express");
            System.out.print("Time            : " + front.time1 + " PM");
        }
        System.out.println();
        System.out.println("Seat number     : " + seatno);
        System.out.println("-----------------------------------------------");

        Node ptr = front;
        temp.next = front;     //adding front passenger node from queue in linked list
        front = front.next;
        ptr.next = null;       //dequeued node passenger from queue list
        w_list--;

    }

    void waiting_list() { // shows the passenger nodes present in the queue
        if (w_list == 0) {
            System.out.println("No passengers in waiting list.");
        } else {
            int i=0;
            Node temp = front;
            System.out.println("---------WAITING LIST----------");
            while (temp != null) {
                System.out.println(temp.name + "--->" +wait[i]);
                temp = temp.next;
                i++;
            }
        }
    }

    void book_ticket() { // adds passenger node in the passenger linked list
        System.out.println("Enter number of passengers : ");
        int n = sc.nextInt();
        int l = n;

        //to allocate seats
        if (k + n > 20)
        {
            if(20>=k)
            { //for taking input details for available seats
                n = 20 - k;
            }
            else {
                //if passengers >seats available
                n=0;
            }
        }

        System.out.println("\nNumber of passengers= "+l+"\nNumber of passengers who will be allocated seats= "+n+"\nTotal number of reservations= "+k);

        for (int i = 0; i < n; i++) {
            System.out.println("------------------------------------------------------------------------");
            System.out.println("Enter name of passenger " + (i + 1));
            String name = sc.next();
            names[b] = name;

            System.out.println("Enter age of passenger " + (i + 1));
            int age = sc.nextInt();

            //TEST CASE-age eligibility
            if (n == 1 && age < 13) {
                //n=1 i.e. single passenger below 13 years
                System.out.println("Age not eligible");
                return;
            }
            System.out.println("Enter gender of passenger " + (i + 1));
            char gender = sc.next().charAt(0);

            //count of reservations
            k++;

            //adding node-passenger to linked list
            Node p = new Node(name, age, gender);

            System.out.println("\nPassenger " + (i + 1) + " Registration number is " + p.reg_no);
            regno[b] = p.reg_no;
            b++;
            System.out.println("------------------------------------------------------------------------");

            //adding passenger-node to linked list
            if (head == null) {
                head = p;
            } else {
                Node temp = head;
                while (temp.next != null) {
                    temp = temp.next;
                }
                temp.next = p;
            }
        }

        //a1-ticket fare for sleeper class
        //a2-ticket fare for AC class
        int a1, a2,z=0;

        System.out.println("\nEnter date of journey(DD/MM/YYYY): ");
        date = sc.next();

        System.out.println("Enter the source place : ");
        source = sc.next();

        System.out.println("Enter the destination place : ");
        destination = sc.next();

        System.out.println("\t\t*************The Following Trains Are Available*************\n");
        System.out.println("\t\t1. Rajdhani Express.........10:00 p.m........Sealdah Station\n");
        System.out.println("\t\t2. Satabdi Express..........05:00 p.m........Howrah Station\n");
        System.out.println("\t\t3. Humsafar Express..........11:00 p.m........Kolkata Chitpur Station\n");
        System.out.println("\t\t4. Garib-Rath Express.........05:00 p.m........Sealdah Station\n");
        System.out.println("\t\t5. Duronto Express...........07:00 p.m.........Santraganchi Station\n");

        System.out.println("Enter your choice : ");
        train_number = sc.nextInt();

        do {
            switch (train_number) {
                case 1:
                    train = "Rajdhani Express";
                    station = "Sealdah Station";
                    time1 = 10;
                    a1 = 1500;
                    a2 = 2000;
                    d = cal(a1, a2);
                    break;
                case 2:
                    train = "Satabdi Express";
                    station = "Howrah Station";
                    time1 = 5;
                    a1 = 900;
                    a2 = 1800;
                    d = cal(a1, a2);
                    break;
                case 3:
                    train = "Humsafar Express";
                    station = "Kolkata Chitpur Station";
                    time1 = 11;
                    a1 = 1700;
                    a2 = 2100;
                    d = cal(a1, a2);
                    break;
                case 4:
                    train = "Garib-Rath Express";
                    station = "Sealdah Station";
                    time1 = 5;
                    a1 = 1200;
                    a2 = 1800;
                    d = cal(a1, a2);
                    break;
                case 5:
                    train = "Duronto Express";
                    station = "Santraganchi Station";
                    time1 = 7;
                    a1 = 1900;
                    a2 = 2200;
                    d = cal(a1, a2);
                    break;
                default:
                    System.out.println("Enter correct choice : ");
                    z=1;
                    break;
            }
        } while (z==1);

        System.out.println("Now book your seats:");
        //to show seat matrix layout
        seat_arrangement();

        //to select and book seats
        seat(n);

        //to display ticket -passing starting and end index
        ticket(x, b);

        //to update start index
        x = b;


        if (l - n != 0)
            System.out.println("Now,enter information about waiting list passengers.");

        for (int i = 0; i < l - n; i++) {

            System.out.println("\nEnter name of passenger:" + (i + 1));
            String name = sc.next();
            names[b] = name;

            System.out.println("Enter age of passenger:" + (i + 1));
            int age = sc.nextInt();

            if (n == 1 && age < 13) {
                System.out.println("Age not eligible.");
                return;
            }

            System.out.println("Enter gender of passenger:" + (i + 1));
            char gender = sc.next().charAt(0);

            //incrementing number of reservation
            k++;

            //adding passenger-node in waiting queue list
            enqueue(name, age, gender);

            wait[m]=w_list;

            System.out.println("\nYour waiting list number is:" + wait[m]);

            m++;
        }
    }

    void seat_arrangement() { // function to display arrangement of seats in train
        System.out.println("\t\t  -:SEAT MATRIX:-");
        System.out.print("\t(U)   (M)      (L)     (L)       (U)\n\n");
        System.out.print("\t10    11        12\t13        14\n\n");
        System.out.print("\t15    16        17\t18        19\n\n");
        System.out.print("\t20    21        22\t23        24\n\n");
        System.out.print("\t25    26        27\t28        29\n");
        System.out.println();
        System.out.println();
        System.out.println();
    }

    void seat(int n) {
        System.out.println("\t\t\t  -:AVAILABLE SEATS:-");
        System.out.println();
        System.out.println("NOTE : 0 indicates seats are FULL");
        System.out.println();
        System.out.print("\t(U)    (M)      \t(L)     (L)      \t(U)\n\n");
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 5; j++) {
                System.out.print("\t");
                System.out.print(s[i][j]);
                System.out.print("  ");
                if (j == 1 || j == 3) {
                    System.out.print("      ");
                }
            }
            System.out.println();
            System.out.println();
        }

        System.out.println("Enter your seat numbers : "); // taking user input for seat numbers and storing it in the seat number array
        int c = x;
        for (int i = c; i < c + n; i++) {
            seat_no[i] = sc.nextInt();
        }

        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 5; j++) {
                for (int q= c; q < c + n; q++) {
                    if (seat_no[q] == s[i][j]) {
                        s[i][j] = 0; // marking above entered seat numbers as reserved/full
                    }
                }
            }
        }
        //incrementing total number of passengers
        total_p = total_p + n;
    }

    int cal(int y1, int y2) {
        // function to calculate the total fare of the journey based on various options
        //bill total amount
        int c = 0;
        System.out.println("1.Sleeper class\n2.AC class");
        System.out.println("Enter your choice : ");
        int ch = sc.nextInt();
        switch (ch) {
            case 1:
                cla = "Sleeper class";
                c = y1;
                break;
            case 2:
                System.out.println("1.3rd AC class\n2.2nd AC class\n3.1st AC class");
                System.out.println("Enter your choice : ");
                int k = sc.nextInt();
                switch (k) {
                    case 1:
                        cla = "3rd AC class";
                        c = y2 * 3;
                        break;
                    case 2:
                        cla = "2nd AC class";
                        c = y2 * 2;
                        break;
                    case 3:
                        cla = "1st AC class";
                        c = y2;
                        break;
                    default:
                        System.out.println("Invalid choice!");
                        break;
                }
                break;
            default:
                System.out.println("Invalid choice!");
                break;
        }
        return c;
    }

    void available_seats() { // function to show the revised seat availability once seats get booked by the passengers
        System.out.println("\t\t\t  -:AVAILABLE SEATS:-");
        System.out.println();
        System.out.print("\t(U)    (M)      \t(L)     (L)      \t(U)\n\n");
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 5; j++) {
                System.out.print("\t");
                System.out.print(s[i][j]);
                System.out.print("  ");
                if (j == 1 || j == 3) {
                    System.out.print("      ");
                }
            }
            System.out.println();
            System.out.println();
        }
    }

    void cancel_booking() {
        // passengers get removed from the passenger linked list based on their registration number

        //decrement total number of reservations
        k--;
        total_p--;

        System.out.println("Enter your registration number :");
        int no = sc.nextInt();

        //t-registration number
        if (no < 2300 || no > t) {
            System.out.println("Invalid registration number!");
        } else {
            System.out.println("Enter your seat number : ");
            int seatno = sc.nextInt();

            if (w_list == 0)
                // if waiting list is empty then the cancelled seat number is unbooked using init function
                init(seatno);

            // deleting node from linked list
            Node temp = head;
            Node prev = null;
            while (temp != null) {
                if (temp.reg_no == no) {
                    if (temp == head) {
                        head = temp.next;
                    } else {
                        prev.next = temp.next;
                    }
                }
                prev = temp;
                temp = temp.next;
            }

            System.out.println("Your booking is cancelled successfully!");
            System.out.println("You get refund of rupees 500.");
            if (w_list > 0) {
                // during cancellation of ticket, if there are passengers in the queue
                // (waiting list)then they are removed from queue and added to passenger linked list
                dequeue(seatno);

            }
        }
    }

    void display_passenger_details() {
        // passenger details are displayed by traversing through linked list
        System.out.println("Passenger name\t\tRegistration number");

        Node temp = head;
        while (temp != null) {
            System.out.println(temp.name + "\t\t" + temp.reg_no);
            temp = temp.next;
        }
    }

    void init(int val) {
        // function that takes parameter as seat number and cancels booking it
        int r = 0, c = 0;
        //val- seat number input
        if (val == 10) {
            r = 0;
            c = 0;
            s[r][c] = val;
        } else if (val == 11) {
            r = 0;
            c = 1;
            s[r][c] = val;
        } else if (val == 12) {
            r = 0;
            c = 2;
            s[r][c] = val;
        } else if (val == 13) {
            r = 0;
            c = 3;
            s[r][c] = val;
        } else if (val == 14) {
            r = 0;
            c = 4;
            s[r][c] = val;
        } else if (val == 15) {
            r = 1;
            c = 0;
            s[r][c] = val;
        } else if (val == 16) {
            r = 1;
            c = 1;
            s[r][c] = val;
        } else if (val == 17) {
            r = 1;
            c = 2;
            s[r][c] = val;
        } else if (val == 18) {
            r = 1;
            c = 3;
            s[r][c] = val;
        } else if (val == 19) {
            r = 1;
            c = 4;
            s[r][c] = val;
        } else if (val == 20) {
            r = 2;
            c = 0;
            s[r][c] = val;
        } else if (val == 21) {
            r = 2;
            c = 1;
            s[r][c] = val;
        } else if (val == 22) {
            r = 2;
            c = 2;
            s[r][c] = val;
        } else if (val == 23) {
            r = 2;
            c = 3;
            s[r][c] = val;
        } else if (val == 24) {
            r = 2;
            c = 4;
            s[r][c] = val;
        } else if (val == 25) {
            r = 3;
            c = 0;
            s[r][c] = val;
        } else if (val == 26) {
            r = 3;
            c = 1;
            s[r][c] = val;
        } else if (val == 27) {
            r = 3;
            c = 2;
            s[r][c] = val;
        } else if (val == 28) {
            r = 3;
            c = 3;
            s[r][c] = val;
        } else if (val == 29) {
            r = 3;
            c = 4;
            s[r][c] = val;
        }
    }

    void ticket(int x1, int y) { // function to display ticket
        for (int i = x1; i < y; i++) {

            if (w_list > 0)
                break;
            System.out.println("------------------TICKET-----------------------");
            System.out.println("Name            : " + names[i]);
            System.out.println("Registration no : " + regno[i]);
            System.out.println("Total Amount    : Rs." + d);
            System.out.println("Source          : " + source);
            System.out.println("Destination     : " + destination);
            System.out.println("Date            : " + date);
            System.out.print("Train name      : ");
            if (train_number == 1) {
                System.out.println("Rajdhani express");
                System.out.print("Time            : " + time1 + " PM");
            } else if (train_number == 2) {
                System.out.println("Satabdi express");
                System.out.print("Time            : " + time1 + " PM");
            } else if (train_number == 3) {
                System.out.println("Humsafar express");
                System.out.print("Time            : " + time1 + " PM");
            } else if (train_number == 4) {
                System.out.println("Garib-Rath express");
                System.out.print("Time            : " + time1 + " PM");
            } else if (train_number == 5) {
                System.out.println("Duronto express");
                System.out.print("Time            : " + time1 + " PM");
            }
            System.out.println();
            System.out.println("Seat number     : " + seat_no[i]);
            System.out.println("-----------------------------------------------");
        }

    }

    void pnr_status(){
        //passenger name record(PNR)-current reservation status
        System.out.println("Enter your waiting list number:");
        int no=sc.nextInt();
        if(no<0||no>w_list){
            System.out.println("No Registration found for entered waiting list number.");
        }
        else {
            if(no==0){
                System.out.println("Your booking in confirmed.");
            }
            if(no>0&&no<=3){
                System.out.println("GNWL(General waiting list)-Highest confirmation chances.");
            }else if(no>3&&no<=7){
                System.out.println("CKWL(Tatkal waiting list)-Confirmation chances are lower compared to GNWL.");
            }else if(no>7&&no<=10){
                System.out.println("RLWL(Remote location waiting list)-Less chances of confirmation.");
            }else{
                System.out.println("PQWL(Pooled quota waiting list)-Less chances of confirmation as shared between several stations.");
            }
        }
    }

}
